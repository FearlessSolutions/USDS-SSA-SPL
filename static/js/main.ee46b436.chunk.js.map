{"version":3,"sources":["logo.svg","components/Header.js","components/FormFields/NameComponent.js","components/FormFields/AddressComponent.js","components/LibraryCardApplication.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Header","Fragment","className","href","target","NameComponent","props","useState","firstName","setFirstName","middleName","setMiddleName","lastName","setLastName","htmlFor","onChange","e","value","id","name","type","required","aria-required","onClick","updateName","AddressComponent","pattern","LibraryCardApplication","bind","state","address","currentTarget","payload","console","log","this","setState","React","Component","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.ee46b436.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.9f5d0a16.svg\";","import React from \"react\";\n\nfunction Header(){\n\n    return(\n        <React.Fragment>\n            <div className=\"App-header\">\n                Library Card Application\n            </div>\n            <div>\n                To apply online, you must be at least 13 years old and have photo ID.\n                Children under age 13 may apply by downloading a child's card application.\n                Applications are also available at any <a href={\"https://www.spl.org/hours-and-locations\"} target={\"_blank\"}>Library location</a>.\n            </div>\n        </React.Fragment>\n    )\n    \n}\nexport default Header","import React, { useState } from \"react\";\n\nfunction NameComponent (props){\n\n    const [firstName, setFirstName] = useState(props.firstName);\n    const [middleName, setMiddleName] = useState(props.middleName);\n    const [lastName, setLastName] = useState(props.lastName);\n\n    function updateName() {\n        props.updateName({\n            firstName:firstName,\n            middleName:middleName,\n            lastName:lastName,\n        });\n    }\n\n    return (\n        <React.Fragment>\n            <fieldset className=\"usa-fieldset\">\n                <legend className=\"usa-legend\">Name</legend>\n\n                <label className=\"usa-label\" htmlFor=\"first-name\">First name</label>\n                <input onChange={e => setFirstName(e.target.value)}\n                       value={firstName}\n                       className=\"usa-input\"\n                       id=\"first-name\"\n                       name=\"first-name\"\n                       type=\"text\"\n                       required aria-required=\"true\"\n                      />\n\n                <label className=\"usa-label\" htmlFor=\"middle-name\">\n                    Middle name\n                    <span className=\"usa-hint\">(optional)</span>\n                </label>\n                <input onChange={e => setMiddleName(e.target.value)}\n                       value={middleName}\n                       className=\"usa-input\" id=\"middle-name\" name=\"middle-name\" type=\"text\"/>\n\n                <label className=\"usa-label\" htmlFor=\"last-name\">Last name</label>\n                <input onChange={e => setLastName(e.target.value)}\n                       value={lastName}\n                       className=\"usa-input\" id=\"last-name\" name=\"last-name\" type=\"text\" required\n                       aria-required=\"true\"/>\n            </fieldset>\n            <button type={\"button\"} onClick={() => updateName()}>Next\n            </button>\n        </React.Fragment>\n    )\n\n}\n\nexport default NameComponent;","import React from \"react\";\n\nfunction AddressComponent(){\n    return(\n        <fieldset className=\"usa-fieldset\">\n            <legend className=\"usa-legend\">Mailing address</legend>\n            <label className=\"usa-label\" htmlFor=\"mailing-address-1\">Street address 1</label>\n            <input className=\"usa-input\" id=\"mailing-address-1\" name=\"mailing-address-1\" type=\"text\"/>\n\n            <label className=\"usa-label\" htmlFor=\"mailing-address-2\">Street address 2 <span\n                className=\"usa-hint\">(optional)</span></label>\n            <input className=\"usa-input\" id=\"mailing-address-2\" name=\"mailing-address-2\" type=\"text\"/>\n\n            <div className=\"grid-row grid-gap\">\n                <div className=\"mobile-lg:grid-col-8\">\n                    <label className=\"usa-label\" htmlFor=\"city\">City</label>\n                    <input className=\"usa-input\" id=\"city\" name=\"city\" type=\"text\"/>\n                </div>\n                <div className=\"mobile-lg:grid-col-4\">\n                    <label className=\"usa-label\" htmlFor=\"state\">State</label>\n                    <select className=\"usa-select\" id=\"state\" name=\"state\">\n                        <option value>- Select -</option>\n                        <option value=\"AL\">Alabama</option>\n                        <option value=\"AK\">Alaska</option>\n                        <option value=\"AZ\">Arizona</option>\n                        <option value=\"AR\">Arkansas</option>\n                        <option value=\"CA\">California</option>\n                        <option value=\"CO\">Colorado</option>\n                        <option value=\"CT\">Connecticut</option>\n                        <option value=\"DE\">Delaware</option>\n                        <option value=\"DC\">District of Columbia</option>\n                        <option value=\"FL\">Florida</option>\n                        <option value=\"GA\">Georgia</option>\n                        <option value=\"HI\">Hawaii</option>\n                        <option value=\"ID\">Idaho</option>\n                        <option value=\"IL\">Illinois</option>\n                        <option value=\"IN\">Indiana</option>\n                        <option value=\"IA\">Iowa</option>\n                        <option value=\"KS\">Kansas</option>\n                        <option value=\"KY\">Kentucky</option>\n                        <option value=\"LA\">Louisiana</option>\n                        <option value=\"ME\">Maine</option>\n                        <option value=\"MD\">Maryland</option>\n                        <option value=\"MA\">Massachusetts</option>\n                        <option value=\"MI\">Michigan</option>\n                        <option value=\"MN\">Minnesota</option>\n                        <option value=\"MS\">Mississippi</option>\n                        <option value=\"MO\">Missouri</option>\n                        <option value=\"MT\">Montana</option>\n                        <option value=\"NE\">Nebraska</option>\n                        <option value=\"NV\">Nevada</option>\n                        <option value=\"NH\">New Hampshire</option>\n                        <option value=\"NJ\">New Jersey</option>\n                        <option value=\"NM\">New Mexico</option>\n                        <option value=\"NY\">New York</option>\n                        <option value=\"NC\">North Carolina</option>\n                        <option value=\"ND\">North Dakota</option>\n                        <option value=\"OH\">Ohio</option>\n                        <option value=\"OK\">Oklahoma</option>\n                        <option value=\"OR\">Oregon</option>\n                        <option value=\"PA\">Pennsylvania</option>\n                        <option value=\"RI\">Rhode Island</option>\n                        <option value=\"SC\">South Carolina</option>\n                        <option value=\"SD\">South Dakota</option>\n                        <option value=\"TN\">Tennessee</option>\n                        <option value=\"TX\">Texas</option>\n                        <option value=\"UT\">Utah</option>\n                        <option value=\"VT\">Vermont</option>\n                        <option value=\"VA\">Virginia</option>\n                        <option value=\"WA\">Washington</option>\n                        <option value=\"WV\">West Virginia</option>\n                        <option value=\"WI\">Wisconsin</option>\n                        <option value=\"WY\">Wyoming</option>\n                        <option value=\"AA\">AA - Armed Forces Americas</option>\n                        <option value=\"AE\">AE - Armed Forces Africa</option>\n                        <option value=\"AE\">AE - Armed Forces Canada</option>\n                        <option value=\"AE\">AE - Armed Forces Europe</option>\n                        <option value=\"AE\">AE - Armed Forces Middle East</option>\n                        <option value=\"AP\">AP - Armed Forces Pacific</option>\n                    </select>\n                </div>\n            </div>\n\n            <label className=\"usa-label\" htmlFor=\"zip\">ZIP</label>\n            <input className=\"usa-input usa-input--medium\" id=\"zip\" name=\"zip\" type=\"text\"\n                   pattern=\"[\\d]{5}(-[\\d]{4})?\"/>\n        </fieldset>\n    )\n}\n\nexport default AddressComponent","import React from \"react\";\nimport NameComponent from \"./FormFields/NameComponent\";\nimport AddressComponent from \"./FormFields/AddressComponent\";\n\nexport default class LibraryCardApplication extends React.Component{\n    constructor(props) {\n        super(props);\n        this.updateName = this.updateName.bind(this);\n        this.state = {\n            firstName: '',\n            middleName: '',\n            lastName: '',\n            address: null,\n            currentTarget:\"name\"\n        }\n    }\n\n    updateName(payload){\n        console.log(payload);\n        this.setState({\n            firstName:payload.firstName,\n            middleName:payload.middleName,\n            lastName:payload.lastName,\n            currentTarget:\"address\"\n        })\n\n    }\n    render(){\n        let firstName = this.state.firstName;\n        let middleName = this.state.middleName;\n        let lastName = this.state.lastName;\n        return (\n            <form className=\"usa-form\">\n                {this.state.currentTarget === \"name\" &&\n                    <NameComponent\n                        firstName={firstName}\n                        middleName={middleName}\n                        lastName={lastName}\n                        updateName={this.updateName}\n                    />\n                }\n\n                {this.state.currentTarget === \"address\" &&\n                    <AddressComponent/>\n                }\n            </form>\n        )\n    }\n}","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport 'uswds/dist/js/uswds.min'\nimport 'uswds/dist/css/uswds.min.css'\nimport Header from \"./components/Header\";\nimport LibraryCardApplication from \"./components/LibraryCardApplication\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Header/>\n      <LibraryCardApplication/>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}